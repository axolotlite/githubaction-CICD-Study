name: CI

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - '[0-9]+.x'
    tags:
      - '*'
    paths-ignore:
      - 'docs/**'
      - '*.md'
  pull_request:
    paths-ignore:
      - 'docs/**'
      - '*.md'

jobs:
  build:
    name: Node 18 - On ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ ubuntu-latest ]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node
        id: setup-node
        uses: actions/setup-node@v4.0.1
        with:
          node-version: 18.x
          cache: 'npm'

      - name: Deps
        run: |
          npm install
      - name: build
        run: npm run build
      - name: Archive production artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/
  infra:
    name: Provision aws infrastructure using Terraform
    runs-on: ubuntu-latest
    outputs:
      eip: ${{ steps.max.outputs.ec2_address }}
    needs: [ build ]
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Download a single artifact
        uses: actions/download-artifact@v4
        with:
          name: dist
       
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
      
      - name: Terraform Init
        run: terraform -chdir=terraform init
      
      - name: Terraform Apply
        run: terraform -chdir=terraform apply --auto-approve

      - name: Get Instance IP
        id: max
        run: |
          terraform-bin -chdir=terraform output -raw eip_value > ip_address.txt
          echo "ec2_address=$(cat ip_address.txt)" >> $GITHUB_OUTPUT
      - name: debugging step
        run: |
          echo ${{steps.max.outputs.ec2_address}}
          echo ${{ needs.infra.outputs.eip }}
          echo $GITHUB_OUTPUT
          cat $GITHUB_OUTPUT
      - name: copy file via ssh key
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ steps.max.outputs.ec2_address }}
          username: ec2-user
          port: 22
          key: ${{ secrets.KEY }}
          source: dist/
          target: ~/dist
            #  deployment:
            #    runs-on: ubuntu-latest
            #    needs: [ infra ]
            #    steps:
            #      - name: Checkout
            #        uses: actions/checkout@v2
            #      - name: executing remote ssh commands using password
            #        uses: appleboy/ssh-action@v1.0.3
            #        with:
            #          host: ${{ needs.infra.outputs.eip }}
            #          username: ec2-user
            #          key: ${{ secrets.KEY }}
            #          port: 22
            #          script: |







  

